{"_id":"0eSdw4VU3hdTKhS2","name":"Alien - Roll on selected Mother table","type":"script","author":"TLl1CBsB3Dponc04","img":"icons/svg/biohazard.svg","scope":"global","command":"(async () => {\n  let options = '';\n  game.tables.contents.forEach((t) => {\n    if (t.folder && t.folder.name === 'Alien Mother Tables' && t.folder.name != null) {\n      options = options.concat(`<option value=\"${t.data._id}\">${t.data.name}</option>`);\n    }\n  });\n  let template = `\n                    <form>\n                        <div class=\"form-group\">\n                            <label>Select Table</label>\n                            <select id=\"tableSelect\">${options}</select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>How Many?</label>\n                            <input type=\"text\" id=\"inputNbr\" value=1>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Modifier?</label>\n                            <input type=\"text\" id=\"inputMod\" value=\"0\">\n                        </div>\n                    </form>`;\n\n  let buttons = {};\n  if (game.tables.entities.length > 0) {\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Draw',\n        callback: async (html) => {\n          const tableId = html.find('#tableSelect')[0].value;\n          const table = game.tables.get(tableId);\n          const drawNumber = parseInt(html.find('#inputNbr')[0].value || 0);\n          const formula = table.data.formula;\n          const modifier = parseInt(html.find('#inputMod')[0].value || '0');\n\n          for (let i = 0; i < drawNumber; i++) {\n            const roll = new Roll(formula + ' + ' + modifier);\n            roll.evaluate({ async: false});\n            await table.draw({ roll: roll });\n          }\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancel',\n      },\n    };\n  } else {\n    template = '<div style=\"text-align: center\">There are no tables to draw from!</div><br>';\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'OK',\n      },\n    };\n  }\n\n  new Dialog({\n    title: 'Roll on selected Mother table',\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"TLl1CBsB3Dponc04":3},"flags":{"furnace":{"runAsGM":false}}}
{"_id":"2uRygGpJBInn9YZk","name":"Alien - Player Ad-hoc YZE Dice Roller","type":"script","author":"vVRzTNcybBml63HZ","img":"systems/alienrpg/ui/DsN/alien-dice-b6.png","scope":"global","command":"(async () => {\n  let hostile = false;\n  try {\n    let label = `${game.i18n.localize('ALIENRPG.ROLLFOR')}` + ' ' + actor.name;\n  } catch {\n    ui.notifications.error(`${game.i18n.localize('ALIENRPG.NoToken')}`);\n    return;\n  }\n  let label = 'for ' + actor.name;\n  let actorid = actor.id;\n  let reRoll = false;\n  let blind = false;\n\n  let template = `\n        <form>\n            <label>${game.i18n.localize('ALIENRPG.ENSOKEN')}</label>\n\n            <div class=\"form-group\">\n            <label>${game.i18n.localize('ALIENRPG.HOWMANYDICE')}</label>\n            <input type=\"text\" id=\"fr1Data\" value=1>\n            </div>\n            <div class=\"form-group\">\n            <label>${game.i18n.localize('ALIENRPG.HOWMANYSTRESS')}</label>\n            <input type=\"text\" id=\"fr2Data\" value=0>\n            </div>\n   \n        </form>`;\n\n  let buttons = {};\n  // if (game.tables.entities.length > 0) {\n  buttons = {\n    draw: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: `${game.i18n.localize('ALIENRPG.Roll')}`,\n      callback: async (html) => {\n        // const tableId = html.find('#tableSelect')[0].value\n        // const table = game.tables.get(tableId);\n        const r1Data = parseInt(html.find('#fr1Data')[0].value || 0);\n        const r2Data = parseInt(html.find('#fr2Data')[0].value || 0);\n\n        await game.alienrpg.yze.yzeRoll(hostile, blind, reRoll, label, r1Data, 'Black', r2Data, 'Stress', actorid);\n      },\n    },\n    cancel: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: `${game.i18n.localize('ALIENRPG.DialCancel')}`,\n    },\n  };\n\n  new Dialog({\n    title: 'Player - Roll Alien Dice.',\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"vVRzTNcybBml63HZ":3},"flags":{"furnace":{"runAsGM":false}}}
{"name":"Alien - Roll on selected Mother table V9","type":"script","author":"w906BIejjEAQr61b","img":"icons/svg/biohazard.svg","scope":"global","command":"(async () => {\n  let options = '';\n  game.tables.contents.forEach((t) => {\n    if (t.folder && t.folder.name === 'Alien Mother Tables' && t.folder.name != null) {\n      options = options.concat(`<option value=\"${t.data._id}\">${t.data.name}</option>`);\n    }\n  });\n  let template = `\n                    <form>\n                        <div class=\"form-group\">\n                            <label>${game.i18n.localize('ALIENRPG.SELTABLE')}</label>\n                            <select id=\"tableSelect\">${options}</select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>${game.i18n.localize('ALIENRPG.HOWMANY')}</label>\n                            <input type=\"text\" id=\"inputNbr\" value=1>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>${game.i18n.localize('ALIENRPG.MODIFIER')}</label>\n                            <input type=\"text\" id=\"inputMod\" value=\"0\">\n                        </div>\n                    </form>`;\n\n  let buttons = {};\n  if (game.tables.size > 0) {\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: `${game.i18n.localize('ALIENRPG.DRAW')}`,\n        callback: async (html) => {\n          const tableId = html.find('#tableSelect')[0].value;\n          const table = game.tables.get(tableId);\n          const drawNumber = parseInt(html.find('#inputNbr')[0].value || 0);\n          const formula = table.data.formula;\n          const modifier = parseInt(html.find('#inputMod')[0].value || '0');\n\n          for (let i = 0; i < drawNumber; i++) {\n            const roll = new Roll(formula + ' + ' + modifier);\n            roll.evaluate({ async: false });\n            await table.draw({ roll: roll });\n          }\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: `${game.i18n.localize('ALIENRPG.DialCancel')}`,\n      },\n    };\n  } else {\n    template = `<div style=\"text-align: center\">${game.i18n.localize('ALIENRPG.NOTABLES')}</div><br>`;\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'OK',\n      },\n    };\n  }\n\n  new Dialog({\n    title: `${game.i18n.localize('ALIENRPG.ROLLONSELECTED')}`,\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"TLl1CBsB3Dponc04":3,"w906BIejjEAQr61b":3},"flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Compendium.alienrpg.alien.0eSdw4VU3hdTKhS2"}},"_id":"4hQ5E02HTc7hA4Uj"}
{"_id":"7oJw70t0MODJWuGV","name":"Alien -  GM Dice Roller","type":"script","author":"vVRzTNcybBml63HZ","img":"systems/alienrpg/ui/DsN/alien-dice-y6.png","scope":"global","command":"(async () => {\n  let hostile = false;\n  let label = 'GM';\n  let reRoll = true;\n\n  let template = `\n        <form>\n            <div class=\"form-group\">\n                <label>${game.i18n.localize('ALIENRPG.HOWMANYDICE')}</label>\n                <input type=\"text\" id=\"fr1Data\" value=1>\n            </div>\n            <div class=\"form-group\">\n                <label>${game.i18n.localize('ALIENRPG.HOWMANYSTRESS')}</label>\n                <input type=\"text\" id=\"fr2Data\" value=0>\n            </div>\n    \n            <div class=\"form-group\">\n                <label>${game.i18n.localize('ALIENRPG.GMONLY')}</label>\n                <input type=\"checkbox\" id=\"fblind\" value=\"true\" checked>\n            </div>\n    \n        </form>`;\n\n  let buttons = {};\n  buttons = {\n    draw: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: `${game.i18n.localize('ALIENRPG.Roll')}`,\n      callback: async (html) => {\n        const r1Data = parseInt(html.find('#fr1Data')[0].value || 0);\n        const r2Data = parseInt(html.find('#fr2Data')[0].value || 0);\n        const blind = html.find('#fblind')[0].checked;\n\n        await game.alienrpg.yze.yzeRoll(hostile, blind, reRoll, label, r1Data, 'Black', r2Data, 'Stress');\n      },\n    },\n    cancel: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: `${game.i18n.localize('ALIENRPG.DialCancel')}`,\n    },\n  };\n\n  new Dialog({\n    title: 'Roll Alien Dice.',\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"vVRzTNcybBml63HZ":3},"flags":{"furnace":{"runAsGM":false}}}
{"name":"Alien - Roll on selected Creature table V9","type":"script","author":"w906BIejjEAQr61b","img":"icons/svg/pawprint.svg","scope":"global","command":"(async () => {\n  let options = '';\n\n  game.tables.contents.forEach((t) => {\n    if (t.folder && t.folder.name === 'Alien Creature Tables' && t.folder.name != null) {\n      options = options.concat(`<option value=\"${t.data._id}\">${t.data.name}</option>`);\n    }\n  });\n  let template = `\n                  <form>\n                      <div class=\"form-group\">\n                      <label>${game.i18n.localize('ALIENRPG.SELTABLE')}</label>\n                      <select id=\"tableSelect\">${options}</select>\n                      </div>\n                      <div class=\"form-group\">\n                      <label>${game.i18n.localize('ALIENRPG.HOWMANY')}</label>\n                      <input type=\"text\" id=\"inputNbr\" value=1>\n                      </div>\n                  </form>`;\n\n  let buttons = {};\n  if (game.tables.size > 0) {\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: `${game.i18n.localize('ALIENRPG.DRAW')}`,\n        callback: async (html) => {\n          const tableId = html.find('#tableSelect')[0].value;\n          const table = game.tables.get(tableId);\n          const drawNumber = parseInt(html.find('#inputNbr')[0].value || 0);\n          for (let i = 0; i < drawNumber; i++) {\n            await table.draw();\n          }\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: `${game.i18n.localize('ALIENRPG.DialCancel')}`,\n      },\n    };\n  } else {\n    template = `<div style=\"text-align: center\">${game.i18n.localize('ALIENRPG.NOTABLES')}</div><br>`;\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'OK',\n      },\n    };\n  }\n\n  new Dialog({\n    title: `${game.i18n.localize('ALIENRPG.ROLLONCREATURETABLE')}`,\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"vVRzTNcybBml63HZ":3,"w906BIejjEAQr61b":3},"flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Compendium.alienrpg.alien.zdUdRGV2IIK7krBU"}},"_id":"IbS4fMpubCAg0xBI"}
{"_id":"zdUdRGV2IIK7krBU","name":"Alien - Roll on selected Creature table","type":"script","author":"vVRzTNcybBml63HZ","img":"icons/svg/pawprint.svg","scope":"global","command":"(async () => {\n  let options = '';\n\n  game.tables.contents.forEach((t) => {\n    if (t.folder && t.folder.name === 'Alien Creature Tables' && t.folder.name != null) {\n      options = options.concat(`<option value=\"${t.data._id}\">${t.data.name}</option>`);\n    }\n  });\n  let template = `\n                  <form>\n                      <div class=\"form-group\">\n                          <label>Select Table</label>\n                          <select id=\"tableSelect\">${options}</select>\n                      </div>\n                      <div class=\"form-group\">\n                          <label>How Many?</label>\n                          <input type=\"text\" id=\"inputNbr\" value=1>\n                      </div>\n                  </form>`;\n\n  let buttons = {};\n  if (game.tables.entities.length > 0) {\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Draw',\n        callback: async (html) => {\n          const tableId = html.find('#tableSelect')[0].value;\n          const table = game.tables.get(tableId);\n          const drawNumber = parseInt(html.find('#inputNbr')[0].value || 0);\n          for (let i = 0; i < drawNumber; i++) {\n            await table.draw();\n          }\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancel',\n      },\n    };\n  } else {\n    template = '<div style=\"text-align: center\">There are no tables to draw from!</div><br>';\n    buttons = {\n      draw: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'OK',\n      },\n    };\n  }\n\n  new Dialog({\n    title: 'Draw multiple RollTable entries',\n    content: template,\n    buttons: buttons,\n    default: 'draw',\n  }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"vVRzTNcybBml63HZ":3},"flags":{"furnace":{"runAsGM":false}}}
